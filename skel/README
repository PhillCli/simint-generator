Simint
----------------------------------------------------
Horizontally-vectorized electron repulsion integrals


----------
WARNING
----------
This is still a pretty experimental library. I haven't even given it
a version number yet.
I've validated it as much as possible, but there still may be bugs. In addition,
the API may change in the future.

----------
WARNING 2
----------
This currently supports only up to (f f | f f) integrals.
Angular momentum requirements:  (a b | c d)
  a >= b
  c >= d
  a >= c
  a+b >= c+d



-------------
Requirements
-------------

Intel Compiler v15 or above
CMake 3.0 or above
Intel CPU



---------------------------
Selecting the right library
---------------------------

There are currently three verions. Make sure you select
the correct one for you CPU

1.) simint-scalar
    Should work with basically any CPU, but isn't vectorized...

2.) simint-avx
    Intel CPUs with AVX support
      * Sandy Bridge (not tested)
      * Ivy Bridge
      * Haswell

3.) simint-avxfma
    Intel CPUs with AVX and FMA support
      * Haswell



---------------------------
Configuring
---------------------------

Configuration and building is done via CMake (www.cmake.org).
Generally, from within the extracted directory:

    mkdir build; cd build
    CC=icc CXX=icpc cmake -DCMAKE_BUILD_TYPE=Release (...other options...)  ../

Other options (besides CMake standard options):

    -DSIMINT_CXX_FLAGS="flag1;flag2"
    -DSIMINT_C_FLAGS="flag1;flag2"

        Additional flags to pass to Simint, separated by semicolon. For example,
            -DSIMINT_CXX_FLAGS="-xavx"                  required for AVX builds
            -DSIMINT_C_FLAGS="-xavx"                    required for AVX builds
            -DSIMINT_CXX_FLAGS="-no-vec;-no-simd"       disable compiler-generated vectorization
            -DSIMINT_C_FLAGS="-no-vec;-no-simd"         disable compiler-generated vectorization
   

    -DLIBINT2_PATH=/libint/install/prefix
        (not required)
        Enable comparison/benchmarks with Libint2 (https://github.com/evaleev/libint).
        Path should be to install directory
        (directory should contain "include" and "lib" subdirectories)

    -DLIBERD_PATH=/liberd/install/path
        (not required)
        Enable comparison/benchmarks with LibERD
        Path should contain a "lib" subdirectory with "liberd.a" file


---------------------------
Building
---------------------------

make and make install, as usual


---------------------------
Tests
---------------------------

Can run tests from the build directory. See tests/dat for available
molecules and basis sets.

    test_eri           - Validate accuracy
    benchmark_eri      - Benchmark simint 
    benchmark_erd      - Benchmark LibERD
    benchmark_libint2  - Benchmark the Libint2 library

Examples:

    test/test_eri ../test/dat/H2O.STO-3G.mol
    test/test_eri ../test/dat/ETHANE.AUG-CC-PVTZ.mol
    test/benchmark_eri ../test/dat/C6H6.ANO.mol



---------------------------
Code examples
---------------------------

Some simple examples of using the library are in the "examples" subdirectory.
They are built by default.

    examples/example1


